{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8285832,"sourceType":"datasetVersion","datasetId":4921262}],"dockerImageVersionId":30698,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:27:59.674745Z","iopub.execute_input":"2024-05-02T02:27:59.675197Z","iopub.status.idle":"2024-05-02T02:28:02.307894Z","shell.execute_reply.started":"2024-05-02T02:27:59.675162Z","shell.execute_reply":"2024-05-02T02:28:02.306556Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"df =  pd.read_csv('/kaggle/input/cardio/Cardiovascular_Diseases.csv')\ndf.head(10)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:20.640220Z","iopub.execute_input":"2024-05-02T02:28:20.640811Z","iopub.status.idle":"2024-05-02T02:28:22.288716Z","shell.execute_reply.started":"2024-05-02T02:28:20.640776Z","shell.execute_reply":"2024-05-02T02:28:22.287324Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/2964561071.py:1: DtypeWarning: Columns (12,13) have mixed types. Specify dtype option on import or set low_memory=False.\n  df =  pd.read_csv('/kaggle/input/cardio/Cardiovascular_Diseases.csv')\n","output_type":"stream"},{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"  General_Health                  Checkup Exercise Heart_Disease Skin_Cancer  \\\n0           Poor  Within the past 2 years       No            No          No   \n1      Very Good     Within the past year       No           Yes          No   \n2      Very Good     Within the past year      Yes            No          No   \n3           Poor     Within the past year      Yes           Yes          No   \n4           Good     Within the past year       No            No          No   \n5           Good     Within the past year       No            No          No   \n6           Fair     Within the past year      Yes           Yes          No   \n7           Good     Within the past year      Yes            No          No   \n8           Fair     Within the past year       No            No          No   \n9           Fair     Within the past year       No            No          No   \n\n  Other_Cancer Depression Diabetes Arthritis     Sex Age_Category  \\\n0           No         No       No       Yes  Female        70-74   \n1           No         No      Yes        No  Female        70-74   \n2           No         No      Yes        No  Female        60-64   \n3           No         No      Yes        No    Male        75-79   \n4           No         No       No        No    Male          80+   \n5           No        Yes       No       Yes    Male        60-64   \n6           No         No       No       Yes    Male        60-64   \n7           No         No       No       Yes  Female        65-69   \n8           No        Yes       No        No  Female        65-69   \n9           No         No      Yes       Yes  Female        70-74   \n\n   Height_(cm) Weight_(kg)    BMI Smoking_History  Alcohol_Consumption  \\\n0        150.0       32.66  14.54             Yes                  0.0   \n1        165.0       77.11  28.29              No                  0.0   \n2        163.0       88.45  33.47              No                  4.0   \n3        180.0       93.44  28.73              No                  0.0   \n4        191.0       88.45  24.37             Yes                  0.0   \n5        183.0      154.22  46.11              No                  0.0   \n6        175.0       69.85  22.74             Yes                  0.0   \n7        165.0      108.86  39.94             Yes                  3.0   \n8        163.0       72.57  27.46             Yes                  0.0   \n9        163.0       91.63  34.67              No                  0.0   \n\n   Fruit_Consumption  Green_Vegetables_Consumption  FriedPotato_Consumption  \n0               30.0                          16.0                     12.0  \n1               30.0                           0.0                      4.0  \n2               12.0                           3.0                     16.0  \n3               30.0                          30.0                      8.0  \n4                8.0                           4.0                      0.0  \n5               12.0                          12.0                     12.0  \n6               16.0                           8.0                      0.0  \n7               30.0                           8.0                      8.0  \n8               12.0                          12.0                      4.0  \n9               12.0                          12.0                      1.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>General_Health</th>\n      <th>Checkup</th>\n      <th>Exercise</th>\n      <th>Heart_Disease</th>\n      <th>Skin_Cancer</th>\n      <th>Other_Cancer</th>\n      <th>Depression</th>\n      <th>Diabetes</th>\n      <th>Arthritis</th>\n      <th>Sex</th>\n      <th>Age_Category</th>\n      <th>Height_(cm)</th>\n      <th>Weight_(kg)</th>\n      <th>BMI</th>\n      <th>Smoking_History</th>\n      <th>Alcohol_Consumption</th>\n      <th>Fruit_Consumption</th>\n      <th>Green_Vegetables_Consumption</th>\n      <th>FriedPotato_Consumption</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Poor</td>\n      <td>Within the past 2 years</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Female</td>\n      <td>70-74</td>\n      <td>150.0</td>\n      <td>32.66</td>\n      <td>14.54</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>16.0</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Very Good</td>\n      <td>Within the past year</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Female</td>\n      <td>70-74</td>\n      <td>165.0</td>\n      <td>77.11</td>\n      <td>28.29</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Very Good</td>\n      <td>Within the past year</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Female</td>\n      <td>60-64</td>\n      <td>163.0</td>\n      <td>88.45</td>\n      <td>33.47</td>\n      <td>No</td>\n      <td>4.0</td>\n      <td>12.0</td>\n      <td>3.0</td>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Poor</td>\n      <td>Within the past year</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Male</td>\n      <td>75-79</td>\n      <td>180.0</td>\n      <td>93.44</td>\n      <td>28.73</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>30.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Good</td>\n      <td>Within the past year</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Male</td>\n      <td>80+</td>\n      <td>191.0</td>\n      <td>88.45</td>\n      <td>24.37</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Good</td>\n      <td>Within the past year</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Male</td>\n      <td>60-64</td>\n      <td>183.0</td>\n      <td>154.22</td>\n      <td>46.11</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Fair</td>\n      <td>Within the past year</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Male</td>\n      <td>60-64</td>\n      <td>175.0</td>\n      <td>69.85</td>\n      <td>22.74</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>16.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Good</td>\n      <td>Within the past year</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Female</td>\n      <td>65-69</td>\n      <td>165.0</td>\n      <td>108.86</td>\n      <td>39.94</td>\n      <td>Yes</td>\n      <td>3.0</td>\n      <td>30.0</td>\n      <td>8.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Fair</td>\n      <td>Within the past year</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Female</td>\n      <td>65-69</td>\n      <td>163.0</td>\n      <td>72.57</td>\n      <td>27.46</td>\n      <td>Yes</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Fair</td>\n      <td>Within the past year</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Female</td>\n      <td>70-74</td>\n      <td>163.0</td>\n      <td>91.63</td>\n      <td>34.67</td>\n      <td>No</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#afficher le volume\nprint('Volume of the dataset:',df.shape[0])\n#afficher le nombre de colonnes\nprint('Number of columns:',df.shape[1])\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:25.470417Z","iopub.execute_input":"2024-05-02T02:28:25.471649Z","iopub.status.idle":"2024-05-02T02:28:25.478810Z","shell.execute_reply.started":"2024-05-02T02:28:25.471606Z","shell.execute_reply":"2024-05-02T02:28:25.477188Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Volume of the dataset: 308854\nNumber of columns: 19\n","output_type":"stream"}]},{"cell_type":"code","source":"#Type de codage des attributs\nprint(df.info())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:27.137787Z","iopub.execute_input":"2024-05-02T02:28:27.138243Z","iopub.status.idle":"2024-05-02T02:28:27.586512Z","shell.execute_reply.started":"2024-05-02T02:28:27.138209Z","shell.execute_reply":"2024-05-02T02:28:27.585220Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 308854 entries, 0 to 308853\nData columns (total 19 columns):\n #   Column                        Non-Null Count   Dtype  \n---  ------                        --------------   -----  \n 0   General_Health                308854 non-null  object \n 1   Checkup                       299312 non-null  object \n 2   Exercise                      299312 non-null  object \n 3   Heart_Disease                 299312 non-null  object \n 4   Skin_Cancer                   299312 non-null  object \n 5   Other_Cancer                  299312 non-null  object \n 6   Depression                    299312 non-null  object \n 7   Diabetes                      299312 non-null  object \n 8   Arthritis                     299312 non-null  object \n 9   Sex                           299312 non-null  object \n 10  Age_Category                  299312 non-null  object \n 11  Height_(cm)                   299287 non-null  float64\n 12  Weight_(kg)                   299311 non-null  object \n 13  BMI                           299312 non-null  object \n 14  Smoking_History               299312 non-null  object \n 15  Alcohol_Consumption           299312 non-null  float64\n 16  Fruit_Consumption             299312 non-null  float64\n 17  Green_Vegetables_Consumption  299312 non-null  float64\n 18  FriedPotato_Consumption       299311 non-null  float64\ndtypes: float64(5), object(14)\nmemory usage: 44.8+ MB\nNone\n","output_type":"stream"}]},{"cell_type":"code","source":"#statistiques descriptives\nprint(df.describe())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:29.914242Z","iopub.execute_input":"2024-05-02T02:28:29.914743Z","iopub.status.idle":"2024-05-02T02:28:30.032758Z","shell.execute_reply.started":"2024-05-02T02:28:29.914704Z","shell.execute_reply":"2024-05-02T02:28:30.030874Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"         Height_(cm)  Alcohol_Consumption  Fruit_Consumption  \\\ncount  299287.000000        299312.000000      299312.000000   \nmean      170.719734             5.134111          29.858245   \nstd        10.649743             8.222629          24.885926   \nmin        91.000000             0.000000           0.000000   \n25%       163.000000             0.000000          12.000000   \n50%       170.000000             1.000000          30.000000   \n75%       178.000000             6.000000          30.000000   \nmax       241.000000            30.000000         120.000000   \n\n       Green_Vegetables_Consumption  FriedPotato_Consumption  \ncount                 299312.000000            299311.000000  \nmean                      15.110964                 6.306450  \nstd                       14.917528                 8.588447  \nmin                        0.000000                 0.000000  \n25%                        4.000000                 2.000000  \n50%                       12.000000                 4.000000  \n75%                       20.000000                 8.000000  \nmax                      128.000000               128.000000  \n","output_type":"stream"}]},{"cell_type":"code","source":"#unique values\nprint(df.nunique())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:33.861572Z","iopub.execute_input":"2024-05-02T02:28:33.862013Z","iopub.status.idle":"2024-05-02T02:28:34.291077Z","shell.execute_reply.started":"2024-05-02T02:28:33.861981Z","shell.execute_reply":"2024-05-02T02:28:34.289526Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"General_Health                  9547\nCheckup                            5\nExercise                           2\nHeart_Disease                      2\nSkin_Cancer                        2\nOther_Cancer                       2\nDepression                         2\nDiabetes                           2\nArthritis                          2\nSex                                2\nAge_Category                      13\nHeight_(cm)                       99\nWeight_(kg)                      872\nBMI                             5684\nSmoking_History                    3\nAlcohol_Consumption               31\nFruit_Consumption                 77\nGreen_Vegetables_Consumption      74\nFriedPotato_Consumption           69\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"#missing values\nprint(df.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:36.321024Z","iopub.execute_input":"2024-05-02T02:28:36.321404Z","iopub.status.idle":"2024-05-02T02:28:36.749071Z","shell.execute_reply.started":"2024-05-02T02:28:36.321376Z","shell.execute_reply":"2024-05-02T02:28:36.747603Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"General_Health                     0\nCheckup                         9542\nExercise                        9542\nHeart_Disease                   9542\nSkin_Cancer                     9542\nOther_Cancer                    9542\nDepression                      9542\nDiabetes                        9542\nArthritis                       9542\nSex                             9542\nAge_Category                    9542\nHeight_(cm)                     9567\nWeight_(kg)                     9543\nBMI                             9542\nSmoking_History                 9542\nAlcohol_Consumption             9542\nFruit_Consumption               9542\nGreen_Vegetables_Consumption    9542\nFriedPotato_Consumption         9543\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"#les valeurs dupliquées\nprint(df.duplicated().sum())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:38.685710Z","iopub.execute_input":"2024-05-02T02:28:38.686125Z","iopub.status.idle":"2024-05-02T02:28:39.635721Z","shell.execute_reply.started":"2024-05-02T02:28:38.686095Z","shell.execute_reply":"2024-05-02T02:28:39.634037Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"70\n","output_type":"stream"}]},{"cell_type":"code","source":"# Identify columns with missing values\ncolumns_with_missing = df.columns[df.isnull().any()]\nprint(columns_with_missing)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:28:59.548234Z","iopub.execute_input":"2024-05-02T02:28:59.549095Z","iopub.status.idle":"2024-05-02T02:28:59.974639Z","shell.execute_reply.started":"2024-05-02T02:28:59.549057Z","shell.execute_reply":"2024-05-02T02:28:59.972996Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"Index(['Checkup', 'Exercise', 'Heart_Disease', 'Skin_Cancer', 'Other_Cancer',\n       'Depression', 'Diabetes', 'Arthritis', 'Sex', 'Age_Category',\n       'Height_(cm)', 'Weight_(kg)', 'BMI', 'Smoking_History',\n       'Alcohol_Consumption', 'Fruit_Consumption',\n       'Green_Vegetables_Consumption', 'FriedPotato_Consumption'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"code","source":"#drop duplicates\ndf.drop_duplicates(inplace=True)\n#delete null values\ndf.dropna(inplace=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:01.764247Z","iopub.execute_input":"2024-05-02T02:29:01.765337Z","iopub.status.idle":"2024-05-02T02:29:03.323304Z","shell.execute_reply.started":"2024-05-02T02:29:01.765300Z","shell.execute_reply":"2024-05-02T02:29:03.322064Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"#print unique values of each column\nfor col in df.columns:\n    print(col)\n    print(df[col].unique())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:05.477230Z","iopub.execute_input":"2024-05-02T02:29:05.477667Z","iopub.status.idle":"2024-05-02T02:29:05.888875Z","shell.execute_reply.started":"2024-05-02T02:29:05.477634Z","shell.execute_reply":"2024-05-02T02:29:05.887324Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"General_Health\n['Poor' 'Very Good' 'Good' 'Fair' 'Excellent']\nCheckup\n['Within the past 2 years' 'Within the past year' '5 or more years ago'\n 'Within the past 5 years' 'Never']\nExercise\n['No' 'Yes']\nHeart_Disease\n['No' 'Yes']\nSkin_Cancer\n['No' 'Yes']\nOther_Cancer\n['No' 'Yes']\nDepression\n['No' 'Yes']\nDiabetes\n['No' 'Yes']\nArthritis\n['Yes' 'No']\nSex\n['Female' 'Male']\nAge_Category\n['70-74' '60-64' '75-79' '80+' '65-69' '45-49' '18-24' '30-34' '55-59'\n '50-54' '35-39' '40-44' '25-29']\nHeight_(cm)\n[150. 165. 163. 180. 191. 183. 175. 160. 178. 157. 188. 185. 170. 168.\n 173. 152. 155. 193. 196. 206. 198. 140. 135. 145. 147. 142. 201. 218.\n 124. 203. 137. 122. 216. 224. 229. 151. 177. 164. 162. 156. 153. 169.\n 172. 106. 167. 190. 143. 171. 154. 176. 200. 146. 148. 158. 159. 187.\n 104. 120. 107. 211. 226. 182. 213.  97. 184. 125. 127. 234. 130. 119.\n 105. 132. 166. 181. 186.  91. 174. 208. 149.  96. 197.  94. 103. 221.\n 134. 161. 189. 100. 179. 117.  99. 144. 102. 110. 241. 115. 205. 195.\n 108.]\nWeight_(kg)\n['32.66' '77.11' '88.45' '93.44' '154.22' '69.85' '108.86' '72.57' '91.63'\n '74.84' '104.33' '79.38' '55.79' '81.65' '124.74' '81.19' '70.31'\n '112.49' '147.42' '84.82' '102.06' '64.41' '60.78' '61.23' '88.0' '90.72'\n '49.9' '85.28' '120.2' '62.14' '65.77' '89.81' '66.68' '86.18' '72.12'\n '87.54' '62.6' '75.75' '88.9' '92.08' '56.7' '68.04' '79.83' '63.5'\n '58.97' '83.91' '114.76' '45.36' '54.43' '73.48' '125.19' '77.56' '96.16'\n '95.25' '115.67' '82.55' '136.08' '78.93' '70.76' '99.79' '95.71' '53.52'\n '87.09' '55.34' '83.01' '52.16' '123.38' '98.88' '73.03' '76.66' '113.4'\n '97.52' '71.67' '83.46' '122.47' '58.06' '74.39' '67.13' '47.63' '99.34'\n '85.73' '108.41' '91.17' '57.61' '69.4' '63.05' '45.81' '94.35' '44.45'\n '117.93' '107.5' '127.01' '106.59' '107.95' '89.36' '92.99' '53.07'\n '78.02' '131.09' '97.98' '84.37' '111.13' '50.8' '57.15' '64.86' '80.29'\n '76.2' '114.31' '65.32' '97.07' '67.59' '75.3' '51.26' '61.69' '107.05'\n '42.64' '40.82' '101.6' '90.26' '131.54' '98.43' '78.47' '86.64' '59.87'\n '68.95' '60.33' '94.8' '48.53' '110.68' '96.62' '105.69' '117.48'\n '102.51' '46.27' '109.77' '58.51' '68.49' '133.81' '158.76' '52.62'\n '80.74' '48.99' '117.03' '54.88' '33.11' '51.71' '92.53' '34.02' '44.91'\n '105.23' '145.6' '106.14' '139.71' '124.28' '103.42' '71.21' '73.94'\n '138.35' '143.34' '101.15' '103.87' '145.15' '93.89' '49.44' '46.72'\n '120.66' '132.9' '112.04' '167.83' '142.88' '66.22' '63.96' '162.39'\n '176.9' '121.56' '111.58' '136.98' '110.22' '170.1' '122.02' '133.36'\n '119.75' '129.27' '175.54' '151.95' '118.39' '121.11' '132.45' '135.62'\n '119.29' '82.1' '102.97' '172.37' '156.49' '43.09' '43.54' '157.4'\n '59.42' '116.12' '181.44' '56.25' '125.65' '127.91' '144.7' '149.69'\n '113.85' '163.29' '100.7' '115.21' '112.94' '208.65' '127.46' '100.24'\n '136.53' '50.35' '130.63' '122.92' '141.97' '47.17' '142.43' '132.0'\n '116.57' '151.5' '72.0' '140.61' '118.84' '44.0' '160.57' '104.78'\n '130.18' '65.0' '48.08' '139.25' '53.98' '36.29' '129.73' '38.56'\n '228.16' '166.92' '148.32' '174.63' '137.44' '235.87' '161.03' '152.86'\n '105.0' '75.0' '109.0' '123.83' '165.56' '42.18' '134.26' '140.16'\n '228.61' '128.82' '39.92' '78.0' '109.32' '204.12' '85.0' '141.52'\n '161.48' '185.97' '90.0' '61.0' '95.0' '60.0' '45.0' '126.1' '82.0'\n '137.89' '70.0' '64.0' '100.0' '63.0' '126.55' '135.17' '74.0' '150.59'\n '83.0' '189.15' '143.79' '97.0' '73.0' '54.0' '80.0' '164.2' '55.0'\n '52.0' '67.0' '144.24' '68.0' '226.8' '76.0' '190.51' '188.24' '199.58'\n '79.0' '96.0' '146.51' '152.41' '58.0' '62.0' '138.8' '118.0' '165.11'\n '153.31' '84.0' '38.1' '41.73' '39.01' '37.19' '128.37' '156.04' '187.79'\n '168.28' '134.72' '136.0' '35.38' '166.01' '213.19' '89.0' '66.0' '40.37'\n '81.0' '210.92' '50.0' '155.58' '25.4' '224.53' '179.17' '159.66'\n '176.45' '209.56' '148.78' '217.72' '146.06' '140.0' '219.99' '86.0'\n '141.07' '110.0' '92.0' '31.75' '41.28' '146.96' '33.57' '130.0' '48.0'\n '161.93' '94.0' '98.0' '183.25' '53.0' '87.0' '34.47' 63.5 86.18 80.74\n 68.04 104.33 65.77 102.51 83.91 56.7 72.57 60.33 71.21 90.72 88.45 73.48\n 77.11 79.38 95.25 52.62 76.0 81.65 149.69 72.12 99.79 69.85 53.98 70.31\n 62.6 61.23 52.16 124.74 120.2 89.81 88.9 106.59 89.36 102.06 79.83 76.2\n 58.97 111.13 98.88 64.41 97.52 54.43 40.82 74.84 136.08 78.02 165.11\n 84.82 51.26 117.93 83.46 63.05 131.54 105.23 115.67 94.35 50.8 67.13\n 82.55 57.15 108.86 133.81 100.0 45.36 92.99 97.98 58.06 85.73 68.95 47.63\n 96.62 49.9 75.3 65.32 91.63 75.75 100.7 56.25 129.27 63.96 66.22 76.66\n 69.4 70.76 53.07 83.01 78.47 145.15 87.09 113.4 59.87 93.44 97.07 87.54\n 107.05 155.13 50.35 116.57 78.93 74.39 170.1 42.64 60.78 62.14 53.52\n 85.28 49.44 80.29 95.0 89.0 101.15 93.89 111.58 108.41 143.79 64.86 95.71\n 77.56 92.08 140.61 148.78 71.67 112.49 124.28 58.0 66.68 96.16 73.94\n 110.22 126.55 84.37 43.09 65.0 127.01 99.34 50.0 80.0 94.8 122.02 154.22\n 48.08 81.19 68.49 147.42 92.53 122.47 161.03 67.59 88.0 115.21 55.34\n 90.26 91.17 134.72 100.24 107.95 158.76 41.28 138.8 51.71 103.42 125.19\n 54.0 123.38 118.39 70.0 106.14 136.98 58.51 61.69 59.42 102.97 101.6\n 57.61 103.87 73.03 131.09 107.5 85.0 67.0 112.04 114.76 112.94 121.56\n 77.0 109.77 151.95 86.64 183.7 63.0 142.88 44.45 116.12 46.72 47.17\n 272.16 181.44 128.82 54.88 114.31 128.37 206.84 151.05 125.65 117.48 72.0\n 48.99 137.44 98.43 163.29 113.85 110.68 42.18 44.91 26.76 52.0 82.1 96.0\n 117.03 155.58 45.81 121.11 75.0 188.24 143.34 146.06 109.32 43.54 36.29\n 129.73 55.79 48.53 60.0 152.86 140.0 172.37 118.84 126.1 127.91 97.0\n 130.18 185.97 120.66 152.41 156.49 226.8 200.0 165.56 104.78 69.0 66.0\n 86.0 204.12 135.17 119.29 153.31 132.0 167.83 141.52 44.0 82.0 101.0\n 179.17 47.0 78.0 39.92 138.35 62.0 126.0 68.0 84.0 87.0 90.0 174.63 61.0\n 140.16 38.56 59.0 83.0 74.0 55.0 134.26 215.46 190.51 46.27 148.32 37.19\n 132.45 139.25 130.63 132.9 175.99 81.0 119.75 184.61 153.77 151.5 123.83\n 122.92 159.66 137.89 180.53 127.46 133.36 146.51 139.71 41.73 35.38 31.75\n 39.46 174.18 208.65 105.69 186.43 46.0 40.0 79.0 195.04 104.0 166.47\n 145.6 38.1 201.85 147.87 192.78 36.74 144.24 162.84 161.48 171.46 134.0\n 157.85 213.19 191.87 136.53 272.61 161.93 146.96 51.0 231.33 169.19 37.65\n 64.0 93.0 135.62 40.37 162.39 141.07 56.0 53.0 149.23 166.01 150.59 176.9\n 154.68 141.97 158.3 168.28 194.59 98.0 73.0 164.2 144.7 179.62 159.0\n 210.47 180.98 39.01 169.64 285.76 110.0 34.02 177.81 92.0 189.15 119.0\n 150.0 105.0 210.92 159.21 217.72 166.92 244.03 34.47 175.54 163.75 168.74\n 173.27 227.7 199.58 99.0 200.94 229.52 142.43 219.54 157.4 232.69 175.09\n 229.97 293.02 200.49 195.95 190.96 212.73 150.14 229.06 178.72 181.89\n 34.93 235.87 171.0 109.0 156.94 45.0 176.0 57.0 71.0 228.16 228.61 94.0\n 30.84 249.48 240.4 238.14 205.93 273.52 215.0 187.33 182.0 164.65 233.6\n 29.94 219.99 199.13 185.07 216.36 186.88 167.38 189.6 254.01 224.53\n 173.73 219.09 24.95 203.21 156.04 210.01 35.83 190.06 160.57 116.0 33.57\n 120.0 197.31 154.0 180.08 102.0 222.26 202.76 27.22 48.0 206.38 135.0\n 170.55 160.0 43.0 188.69 106.0 177.35 112.0 195.0 172.82 220.45 184.16\n 185.52 26.31 41.0 274.42 160.12 207.75 180.0 175.0 141.0 230.88 258.55\n 203.66 113.0 182.34 195.5 191.42 215.91 178.26 257.64 244.94 263.08 214.1\n 117.0 172.0 115.0 185.0 247.21 39.0 103.0 127.0 30.0 250.0 252.2 283.5\n 176.45 32.66 49.0 42.0]\nBMI\n['14.54' '28.29' '33.47' ... 51.91 63.83 56.32]\nSmoking_History\n['Yes' 'No']\nAlcohol_Consumption\n[ 0.  4.  3.  2. 12.  1. 30.  5. 10. 20. 17. 16.  6.  8. 25. 28. 15.  7.\n  9. 24. 11. 29. 27. 14. 21. 23. 18. 26. 22. 13. 19.]\nFruit_Consumption\n[ 30.  12.   8.  16.  60.   0.   2.   7.   5.   3.  90.   1.  28.  20.\n   4.  80.  24.  15.  10.   6.  25.  14. 120.  32.  40.  17.  45. 100.\n   9.  99.  96.  35.  50.  56.  48.  27.  72.  36.  84.  26.  23.  18.\n  42.  22.  21.  11. 112.  29.  64.  70.  33.  76.  44.  39.  75.  31.\n  92. 104.  88.  65.  55.  13.  38.  63.  97. 108.  19.  52.  98.  37.\n  68.  34.  41. 116.  54.  62.  85.]\nGreen_Vegetables_Consumption\n[ 16.   0.   3.  30.   4.  12.   8.  20.   1.  10.   5.   2.  60.  28.\n  25.  14.  40.   7.   6.  22.  24.  15. 120.  90.  19.  13.  11.  80.\n  27.  17.  56.  18.   9.  21.  99.  29.  31.  45.  23. 100.  32.  75.\n  36.  35. 112.  26.  50.  33.  48.  96.  52.  76.  84.  34.  97.  88.\n  98.  92.  55.  95. 104.  64. 124.  61.  65.  77.  85.  44.  39.  70.\n  93. 128.  37.  53.]\nFriedPotato_Consumption\n[ 12.   4.  16.   8.   0.   1.   2.  15.  10.   3.   7.  28.   5.  20.\n  30.   9.   6. 120.  32.  14.  60.  33.  48.  25.  24.  21.  90.  13.\n  99.  17.  18.  40.  56.  34.  36.  44. 100.  11.  64.  45.  80.  29.\n  68.  26.  50.  22.  95.  23.  27. 112.  35.  31.  98.  96.  88.  92.\n  19.  76.  49.  97. 128.  41.  37.  42.  52.  72.  46. 124.  84.]\n","output_type":"stream"}]},{"cell_type":"code","source":"#convert categorical \ndf['Exercise'] = df['Exercise'].replace(['No', 'Yes'], [0, 1])\ndf['Heart_Disease'] = df['Heart_Disease'].replace(['No', 'Yes'], [0, 1])\ndf['Skin_Cancer'] = df['Skin_Cancer'].replace(['No', 'Yes'], [0, 1])\ndf['Other_Cancer'] = df['Other_Cancer'].replace(['No', 'Yes'], [0, 1])\ndf['Depression'] = df['Depression'].replace(['No', 'Yes'], [0, 1])\ndf['Diabetes'] = df['Diabetes'].replace(['No', 'Yes'], [0, 1])\ndf['Arthritis'] = df['Arthritis'].replace(['No', 'Yes'], [0, 1])\ndf['Smoking_History'] = df['Smoking_History'].replace(['No', 'Yes'], [0, 1])\n#transform the sex column to numerical values\ndf['Sex']= df['Sex'].map({'Female' : 0, 'Male' : 1})\n#Transform the columns to numerical values\nhealth_mapping = {'Poor': 0, 'Fair': 1, 'Good': 2, 'Very Good': 3, 'Excellent': 4}\ncheckup_mapping = {'Never': 0, '5 or more years ago': 1, 'Within the past 5 years': 2, 'Within the past 2 years': 3, 'Within the past year': 4}\nage_mapping = {'18-24': 21, '25-29': 27, '30-34': 32, '35-39': 37, '40-44': 42, '45-49': 47, '50-54': 52, '55-59': 57, '60-64': 62, '65-69': 67, '70-74': 72, '75-79': 77, '80+': 85}\ndf['General_Health'] = df['General_Health'].map(health_mapping)\ndf['Checkup'] = df['Checkup'].map(checkup_mapping)\ndf['Age_Category'] = df['Age_Category'].map(age_mapping)\ndf['Age_Category'] = df['Age_Category'].astype(int)\ndf['Weight_(kg)'] = df['Weight_(kg)'].astype(float)\ndf['BMI'] = df['BMI'].astype(float)\ndf['Fruit_Consumption'] = df['Fruit_Consumption'].astype(float)\ndf['Green_Vegetables_Consumption'] = df['Green_Vegetables_Consumption'].astype(float)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:10.467216Z","iopub.execute_input":"2024-05-02T02:29:10.467983Z","iopub.status.idle":"2024-05-02T02:29:12.456260Z","shell.execute_reply.started":"2024-05-02T02:29:10.467946Z","shell.execute_reply":"2024-05-02T02:29:12.454927Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/628937271.py:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Exercise'] = df['Exercise'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:3: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Heart_Disease'] = df['Heart_Disease'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:4: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Skin_Cancer'] = df['Skin_Cancer'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:5: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Other_Cancer'] = df['Other_Cancer'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:6: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Depression'] = df['Depression'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:7: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Diabetes'] = df['Diabetes'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:8: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Arthritis'] = df['Arthritis'].replace(['No', 'Yes'], [0, 1])\n/tmp/ipykernel_33/628937271.py:9: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df['Smoking_History'] = df['Smoking_History'].replace(['No', 'Yes'], [0, 1])\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:14.785892Z","iopub.execute_input":"2024-05-02T02:29:14.786326Z","iopub.status.idle":"2024-05-02T02:29:14.822270Z","shell.execute_reply.started":"2024-05-02T02:29:14.786294Z","shell.execute_reply":"2024-05-02T02:29:14.820758Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"   General_Health  Checkup  Exercise  Heart_Disease  Skin_Cancer  \\\n0               0        3         0              0            0   \n1               3        4         0              1            0   \n2               3        4         1              0            0   \n3               0        4         1              1            0   \n4               2        4         0              0            0   \n5               2        4         0              0            0   \n6               1        4         1              1            0   \n7               2        4         1              0            0   \n8               1        4         0              0            0   \n9               1        4         0              0            0   \n\n   Other_Cancer  Depression  Diabetes  Arthritis  Sex  Age_Category  \\\n0             0           0         0          1    0            72   \n1             0           0         1          0    0            72   \n2             0           0         1          0    0            62   \n3             0           0         1          0    1            77   \n4             0           0         0          0    1            85   \n5             0           1         0          1    1            62   \n6             0           0         0          1    1            62   \n7             0           0         0          1    0            67   \n8             0           1         0          0    0            67   \n9             0           0         1          1    0            72   \n\n   Height_(cm)  Weight_(kg)    BMI  Smoking_History  Alcohol_Consumption  \\\n0        150.0        32.66  14.54                1                  0.0   \n1        165.0        77.11  28.29                0                  0.0   \n2        163.0        88.45  33.47                0                  4.0   \n3        180.0        93.44  28.73                0                  0.0   \n4        191.0        88.45  24.37                1                  0.0   \n5        183.0       154.22  46.11                0                  0.0   \n6        175.0        69.85  22.74                1                  0.0   \n7        165.0       108.86  39.94                1                  3.0   \n8        163.0        72.57  27.46                1                  0.0   \n9        163.0        91.63  34.67                0                  0.0   \n\n   Fruit_Consumption  Green_Vegetables_Consumption  FriedPotato_Consumption  \n0               30.0                          16.0                     12.0  \n1               30.0                           0.0                      4.0  \n2               12.0                           3.0                     16.0  \n3               30.0                          30.0                      8.0  \n4                8.0                           4.0                      0.0  \n5               12.0                          12.0                     12.0  \n6               16.0                           8.0                      0.0  \n7               30.0                           8.0                      8.0  \n8               12.0                          12.0                      4.0  \n9               12.0                          12.0                      1.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>General_Health</th>\n      <th>Checkup</th>\n      <th>Exercise</th>\n      <th>Heart_Disease</th>\n      <th>Skin_Cancer</th>\n      <th>Other_Cancer</th>\n      <th>Depression</th>\n      <th>Diabetes</th>\n      <th>Arthritis</th>\n      <th>Sex</th>\n      <th>Age_Category</th>\n      <th>Height_(cm)</th>\n      <th>Weight_(kg)</th>\n      <th>BMI</th>\n      <th>Smoking_History</th>\n      <th>Alcohol_Consumption</th>\n      <th>Fruit_Consumption</th>\n      <th>Green_Vegetables_Consumption</th>\n      <th>FriedPotato_Consumption</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>72</td>\n      <td>150.0</td>\n      <td>32.66</td>\n      <td>14.54</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>16.0</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>72</td>\n      <td>165.0</td>\n      <td>77.11</td>\n      <td>28.29</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>62</td>\n      <td>163.0</td>\n      <td>88.45</td>\n      <td>33.47</td>\n      <td>0</td>\n      <td>4.0</td>\n      <td>12.0</td>\n      <td>3.0</td>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>77</td>\n      <td>180.0</td>\n      <td>93.44</td>\n      <td>28.73</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>30.0</td>\n      <td>30.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>85</td>\n      <td>191.0</td>\n      <td>88.45</td>\n      <td>24.37</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>62</td>\n      <td>183.0</td>\n      <td>154.22</td>\n      <td>46.11</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>62</td>\n      <td>175.0</td>\n      <td>69.85</td>\n      <td>22.74</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>16.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>67</td>\n      <td>165.0</td>\n      <td>108.86</td>\n      <td>39.94</td>\n      <td>1</td>\n      <td>3.0</td>\n      <td>30.0</td>\n      <td>8.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>67</td>\n      <td>163.0</td>\n      <td>72.57</td>\n      <td>27.46</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>72</td>\n      <td>163.0</td>\n      <td>91.63</td>\n      <td>34.67</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>12.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\n\n# Define the features to be scaled\nfeatures_to_scale = ['Height_(cm)', 'Weight_(kg)', 'BMI', 'Fruit_Consumption', 'Green_Vegetables_Consumption','Alcohol_Consumption','FriedPotato_Consumption','Age_Category']\n\nscaler = MinMaxScaler()\n\ndf[features_to_scale] = scaler.fit_transform(df[features_to_scale])\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:20.756465Z","iopub.execute_input":"2024-05-02T02:29:20.756904Z","iopub.status.idle":"2024-05-02T02:29:21.011972Z","shell.execute_reply.started":"2024-05-02T02:29:20.756869Z","shell.execute_reply":"2024-05-02T02:29:21.010691Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:23.158925Z","iopub.execute_input":"2024-05-02T02:29:23.159360Z","iopub.status.idle":"2024-05-02T02:29:23.184133Z","shell.execute_reply.started":"2024-05-02T02:29:23.159328Z","shell.execute_reply":"2024-05-02T02:29:23.183230Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"   General_Health  Checkup  Exercise  Heart_Disease  Skin_Cancer  \\\n0               0        3         0              0            0   \n1               3        4         0              1            0   \n2               3        4         1              0            0   \n3               0        4         1              1            0   \n4               2        4         0              0            0   \n5               2        4         0              0            0   \n6               1        4         1              1            0   \n7               2        4         1              0            0   \n8               1        4         0              0            0   \n9               1        4         0              0            0   \n\n   Other_Cancer  Depression  Diabetes  Arthritis  Sex  Age_Category  \\\n0             0           0         0          1    0      0.796875   \n1             0           0         1          0    0      0.796875   \n2             0           0         1          0    0      0.640625   \n3             0           0         1          0    1      0.875000   \n4             0           0         0          0    1      1.000000   \n5             0           1         0          1    1      0.640625   \n6             0           0         0          1    1      0.640625   \n7             0           0         0          1    0      0.718750   \n8             0           1         0          0    0      0.718750   \n9             0           0         1          1    0      0.796875   \n\n   Height_(cm)  Weight_(kg)       BMI  Smoking_History  Alcohol_Consumption  \\\n0     0.393333     0.028761  0.028863                1             0.000000   \n1     0.493333     0.194576  0.186347                0             0.000000   \n2     0.480000     0.236878  0.245676                0             0.133333   \n3     0.593333     0.255493  0.191387                0             0.000000   \n4     0.666667     0.236878  0.141450                1             0.000000   \n5     0.613333     0.482225  0.390448                0             0.000000   \n6     0.560000     0.167494  0.122781                1             0.000000   \n7     0.493333     0.313015  0.319780                1             0.100000   \n8     0.480000     0.177640  0.176841                1             0.000000   \n9     0.480000     0.248741  0.259420                0             0.000000   \n\n   Fruit_Consumption  Green_Vegetables_Consumption  FriedPotato_Consumption  \n0           0.250000                      0.125000                 0.093750  \n1           0.250000                      0.000000                 0.031250  \n2           0.100000                      0.023438                 0.125000  \n3           0.250000                      0.234375                 0.062500  \n4           0.066667                      0.031250                 0.000000  \n5           0.100000                      0.093750                 0.093750  \n6           0.133333                      0.062500                 0.000000  \n7           0.250000                      0.062500                 0.062500  \n8           0.100000                      0.093750                 0.031250  \n9           0.100000                      0.093750                 0.007812  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>General_Health</th>\n      <th>Checkup</th>\n      <th>Exercise</th>\n      <th>Heart_Disease</th>\n      <th>Skin_Cancer</th>\n      <th>Other_Cancer</th>\n      <th>Depression</th>\n      <th>Diabetes</th>\n      <th>Arthritis</th>\n      <th>Sex</th>\n      <th>Age_Category</th>\n      <th>Height_(cm)</th>\n      <th>Weight_(kg)</th>\n      <th>BMI</th>\n      <th>Smoking_History</th>\n      <th>Alcohol_Consumption</th>\n      <th>Fruit_Consumption</th>\n      <th>Green_Vegetables_Consumption</th>\n      <th>FriedPotato_Consumption</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.796875</td>\n      <td>0.393333</td>\n      <td>0.028761</td>\n      <td>0.028863</td>\n      <td>1</td>\n      <td>0.000000</td>\n      <td>0.250000</td>\n      <td>0.125000</td>\n      <td>0.093750</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.796875</td>\n      <td>0.493333</td>\n      <td>0.194576</td>\n      <td>0.186347</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0.250000</td>\n      <td>0.000000</td>\n      <td>0.031250</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.640625</td>\n      <td>0.480000</td>\n      <td>0.236878</td>\n      <td>0.245676</td>\n      <td>0</td>\n      <td>0.133333</td>\n      <td>0.100000</td>\n      <td>0.023438</td>\n      <td>0.125000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.875000</td>\n      <td>0.593333</td>\n      <td>0.255493</td>\n      <td>0.191387</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0.250000</td>\n      <td>0.234375</td>\n      <td>0.062500</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.000000</td>\n      <td>0.666667</td>\n      <td>0.236878</td>\n      <td>0.141450</td>\n      <td>1</td>\n      <td>0.000000</td>\n      <td>0.066667</td>\n      <td>0.031250</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.640625</td>\n      <td>0.613333</td>\n      <td>0.482225</td>\n      <td>0.390448</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0.100000</td>\n      <td>0.093750</td>\n      <td>0.093750</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0.640625</td>\n      <td>0.560000</td>\n      <td>0.167494</td>\n      <td>0.122781</td>\n      <td>1</td>\n      <td>0.000000</td>\n      <td>0.133333</td>\n      <td>0.062500</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.718750</td>\n      <td>0.493333</td>\n      <td>0.313015</td>\n      <td>0.319780</td>\n      <td>1</td>\n      <td>0.100000</td>\n      <td>0.250000</td>\n      <td>0.062500</td>\n      <td>0.062500</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.718750</td>\n      <td>0.480000</td>\n      <td>0.177640</td>\n      <td>0.176841</td>\n      <td>1</td>\n      <td>0.000000</td>\n      <td>0.100000</td>\n      <td>0.093750</td>\n      <td>0.031250</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0.796875</td>\n      <td>0.480000</td>\n      <td>0.248741</td>\n      <td>0.259420</td>\n      <td>0</td>\n      <td>0.000000</td>\n      <td>0.100000</td>\n      <td>0.093750</td>\n      <td>0.007812</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\n\n# Define features and target variable\nX = df.drop('Heart_Disease', axis=1)\ny = df['Heart_Disease']\n\n# Initialize the Random Forest classifier\nforest = RandomForestClassifier(random_state=42)\n\n# Fit the model\nforest.fit(X, y)\n\n# Get feature importances\nfeature_importances = forest.feature_importances_\n\n# Create a DataFrame to display feature importances\nfeature_importance_df = pd.DataFrame({'Feature': X.columns, 'Importance': feature_importances})\nfeature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n\n# Print feature importances\nprint(feature_importance_df)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:29:30.971094Z","iopub.execute_input":"2024-05-02T02:29:30.972239Z","iopub.status.idle":"2024-05-02T02:30:46.134423Z","shell.execute_reply.started":"2024-05-02T02:29:30.972198Z","shell.execute_reply":"2024-05-02T02:30:46.133316Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"                         Feature  Importance\n12                           BMI    0.148003\n11                   Weight_(kg)    0.127160\n16  Green_Vegetables_Consumption    0.095314\n15             Fruit_Consumption    0.092370\n10                   Height_(cm)    0.090878\n17       FriedPotato_Consumption    0.088619\n9                   Age_Category    0.087844\n0                 General_Health    0.061740\n14           Alcohol_Consumption    0.058754\n6                       Diabetes    0.021810\n2                       Exercise    0.018018\n7                      Arthritis    0.017946\n5                     Depression    0.017639\n4                   Other_Cancer    0.015741\n1                        Checkup    0.015324\n13               Smoking_History    0.015031\n3                    Skin_Cancer    0.014171\n8                            Sex    0.013638\n","output_type":"stream"}]},{"cell_type":"code","source":"#the length of the training set where Heart_Disease=1\nlength=len(df[df['Heart_Disease']==1])\nprint(length)\n#the length of the training set where Heart_Disease=0\nlength_0=len(df[df['Heart_Disease']==0])\nprint(length_0)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:30:56.297090Z","iopub.execute_input":"2024-05-02T02:30:56.298352Z","iopub.status.idle":"2024-05-02T02:30:56.353549Z","shell.execute_reply.started":"2024-05-02T02:30:56.298296Z","shell.execute_reply":"2024-05-02T02:30:56.352400Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"24079\n275136\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Need to over sample the dataset to make it balenced ","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX = df.drop('Heart_Disease', axis=1)\ny = df['Heart_Disease']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:31:02.351778Z","iopub.execute_input":"2024-05-02T02:31:02.352241Z","iopub.status.idle":"2024-05-02T02:31:02.500533Z","shell.execute_reply.started":"2024-05-02T02:31:02.352206Z","shell.execute_reply":"2024-05-02T02:31:02.499322Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"from imblearn.over_sampling import SMOTE\n# Apply SMOTE to the training data\nsmote = SMOTE(random_state=42)\nX_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:31:05.448311Z","iopub.execute_input":"2024-05-02T02:31:05.448800Z","iopub.status.idle":"2024-05-02T02:31:06.848499Z","shell.execute_reply.started":"2024-05-02T02:31:05.448764Z","shell.execute_reply":"2024-05-02T02:31:06.847051Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"print(y_train_resampled.unique())","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:32:53.685372Z","iopub.execute_input":"2024-05-02T02:32:53.685858Z","iopub.status.idle":"2024-05-02T02:32:53.695965Z","shell.execute_reply.started":"2024-05-02T02:32:53.685813Z","shell.execute_reply":"2024-05-02T02:32:53.694291Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"[0 1]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"KNN ALGO ","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score, precision_score, recall_score, f1_score\nX_resampled = X_train_resampled\ny_resampled = y_train_resampled","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:33:07.611797Z","iopub.execute_input":"2024-05-02T02:33:07.612252Z","iopub.status.idle":"2024-05-02T02:33:07.618692Z","shell.execute_reply.started":"2024-05-02T02:33:07.612208Z","shell.execute_reply":"2024-05-02T02:33:07.617338Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier\n\nparam_grid = {'n_neighbors': list(range(1, 31)), 'metric': ['euclidean', 'manhattan']}\n\nknn = KNeighborsClassifier()\n\ngrid_search = GridSearchCV(knn, param_grid, cv=5, scoring='accuracy')\ngrid_search.fit(X_resampled, y_resampled)\n\nbest_knn = grid_search.best_estimator_\n\nprint(\"Best parameters:\", grid_search.best_params_)\n\ncv_scores = cross_val_score(best_knn, X_resampled, y_resampled, cv=5, scoring='accuracy')\nprint(\"Cross-validation scores:\", cv_scores)\nprint(\"Mean CV Accuracy:\", cv_scores.mean())\n","metadata":{"execution":{"iopub.status.busy":"2024-05-02T02:33:10.632352Z","iopub.execute_input":"2024-05-02T02:33:10.632828Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score, precision_recall_curve, roc_curve, auc\n# Prédictions sur les données de test\ny_pred = best_knn.predict(X_test)\n\n# Calcul de la matrice de confusion\nconf_matrix = confusion_matrix(y_test, y_pred)\n\n# Plot de la matrice de confusion sous forme de heatmap\nplt.figure(figsize=(8, 6))\nsns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='g', cbar=False)\nplt.title('Matrice de Confusion')\nplt.xlabel('Valeurs Prédites')\nplt.ylabel('Valeurs Réelles')\nplt.show()\n\n# Calcul des différentes mesures de performances\naccuracy = accuracy_score(y_test, y_pred)\nprecision = precision_score(y_test, y_pred)\nrecall = recall_score(y_test, y_pred)\nf1 = f1_score(y_test, y_pred)\n\n# Affichage des performances\nprint(\"Accuracy:\", accuracy)\nprint(\"Precision:\", precision)\nprint(\"Recall:\", recall)\nprint(\"F1 Score:\", f1)\n\n# Calcul des scores de décision pour les courbes de précision-rappel et de ROC\ny_scores = best_knn.predict_proba(X_test)[:, 1]  # Probabilité des classes positives\n\n# Calcul des courbes de précision-rappel\nprecision, recall, _ = precision_recall_curve(y_test, y_scores)\n\n# Calcul de l'aire sous la courbe précision-rappel (AUC-PR)\nauc_pr = auc(recall, precision)\n\n# Affichage de la courbe de précision-rappel\nplt.figure(figsize=(8, 6))\nplt.plot(recall, precision, color='blue', label='PR Curve (AUC = %0.2f)' % auc_pr)\nplt.xlabel('Rappel')\nplt.ylabel('Précision')\nplt.title('Courbe de Précision-Rappel')\nplt.legend(loc='lower left')\nplt.grid(True)\nplt.show()\n\n# Calcul des courbes ROC\nfpr, tpr, _ = roc_curve(y_test, y_scores)\n\n# Calcul de l'aire sous la courbe ROC (AUC-ROC)\nauc_roc = auc(fpr, tpr)\n\n# Affichage de la courbe ROC\nplt.figure(figsize=(8, 6))\nplt.plot(fpr, tpr, color='red', label='ROC Curve (AUC = %0.2f)' % auc_roc)\nplt.plot([0, 1], [0, 1], color='navy', linestyle='--')\nplt.xlabel('Taux de Faux Positifs (FPR)')\nplt.ylabel('Taux de Vrais Positifs (TPR)')\nplt.title('Courbe ROC')\nplt.legend(loc='lower right')\nplt.grid(True)\nplt.show()\n","metadata":{},"execution_count":null,"outputs":[]}]}